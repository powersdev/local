#!/usr/bin/env hush

repo = std.env('repo')
multisite = std.env('multisite')

name = std.env('LANDO_APP_NAME')
domain = name ++ '.lndo.site'

is_multisite = std.contains(multisite, "yes")
is_vip = std.contains(repo, "wpcomvip")


# Generate a wp-config file.
function generate_site_config()
  let config = "
    define( 'WP_DEBUG_LOG', true );
    define( 'WP_DEBUG_DISPLAY', false );
    define( 'WP_ENVIRONMENT_TYPE', 'local' );
  "

  if is_multisite then
    config = config ++ "
      define( 'WP_ALLOW_MULTISITE', true );
      define( 'MULTISITE', true );
      define( 'SUBDOMAIN_INSTALL', false );
      define( 'PATH_CURRENT_SITE', '/' );
      define( 'SITE_ID_CURRENT_SITE', 1 );
      define( 'BLOG_ID_CURRENT_SITE', 1 );
    "
  end

  if is_vip then
    config = config ++ "
      if ( file_exists( __DIR__ . '/wp-content/vip-config/vip-config.php' ) ) {
          require_once( __DIR__ . '/wp-content/vip-config/vip-config.php' );
      }

      define( 'DISALLOW_FILE_EDIT', true );
      define( 'DISALLOW_FILE_MODS', true );
      define( 'AUTOMATIC_UPDATER_DISABLED', true );
      define( 'JETPACK_DEV_DEBUG', true );
    "
  end

  {
    wp config create \
      --dbname=wordpress \
      --dbuser=wordpress \
      --dbpass=wordpress \
      --dbhost=database \
      --extra-php <<PHP $config;
    wp config delete WP_DEBUG;
    wp config set WP_HOME https://$domain;
    wp config set WP_SITEURL https://$domain;
  }
end

# Run wp core installation command.
function install_wordpress()
  if is_multisite then
    {
      wp core multisite-install \
        --skip-config --url="$domain" \
        --title="$name" --admin_user=lando \
        --admin_password=lando --admin_email=lando@lndo.site
    }
  else
    {
      wp core install \
        --url="$domain" \
        --title="$name" --admin_user=lando \
        --admin_password=lando --admin_email=lando@lndo.site
    }
  end
end

# Add the appropriate apache configuration file.
function generate_htaccess()
  let file = "htaccess-single"

  if is_multisite then
    file = "htaccess-multi"
  end

  { cp -n /app/config/$file /app/wordpress/.htaccess }
end

# Run Program

std.cd('/app/wordpress')

generate_site_config();
install_wordpress();
generate_htaccess();